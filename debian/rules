#!/usr/bin/make -f

# -*- sh -*-

# Uncomment this to turn on verbose mode. 
#export DH_VERBOSE=1

# This is the debhelper compatibility version to use.
export DH_COMPAT=3
export DEB_BUILD_OPTIONS=debug

#export WITH_GC="--with-gc"
export WITH_SIEVE=--with-sieve
export WITH_SQLITE=--with-sqlite 
export WITH_MYSQL=--with-mysql=/usr/include/mysql 
export WITH_PGSQL=--with-pgsql=/usr/include/postgresql 
export WITH_LDAP=--with-auth-ldap

CFLAGS = -Wall -O1
LDFLAGS = -lcrypt

# These are used for cross-compiling and for saving the configure script
# from having to guess our platform (since we know it already)
DEB_HOST_GNU_TYPE   ?= $(shell dpkg-architecture -qDEB_HOST_GNU_TYPE)
DEB_BUILD_GNU_TYPE  ?= $(shell dpkg-architecture -qDEB_BUILD_GNU_TYPE)

ifneq (,$(findstring debug,$(DEB_BUILD_OPTIONS)))
	export WITH_CHECK=--with-check
	export NOSHARED=--enable-shared=no
	export WITH_MYSQL=--with-mysql=/usr/include/mysql 
	export WITH_LDAP=--with-auth-ldap
	export WITH_SQLITE=
	export WITH_PGSQL=
	
	CFLAGS += -g
endif
ifeq (,$(findstring nostrip,$(DEB_BUILD_OPTIONS)))
	INSTALL_PROGRAM += -s
endif

# dpatch
export PACKAGE=dbmail2
export PACKAGES=dbmail2 \
	dbmail2-mysql \
	dbmail2-mysql-ldap \
	dbmail2-pgsql \
	dbmail2-pgsql-ldap \
	dbmail2-sqlite \
	dbmail2-sqlite-ldap

include /usr/share/dpatch/dpatch.make 

CONFFLAGS=--host=$(DEB_HOST_GNU_TYPE) --build=$(DEB_BUILD_GNU_TYPE) \
	--prefix=/usr --mandir=\$${prefix}/share/man --sysconfdir=/etc/dbmail/ \
	--infodir=\$${prefix}/share/info \
	$(WITH_GC) $(WITH_CHECK) $(NOSHARED) $(WITH_SIEVE) $(WITH_LDAP) $(WITH_MYSQL) $(WITH_PGSQL) $(WITH_SQLITE)

build: stamps/build
stamps/build: stamps patch configure $(PACKAGES)
	touch $@

stamps:
	mkdir stamps
	
configure: stamps/configure
stamps/configure: 
	autoreconf -f -i
	touch $@

dbmail2: stamps/dbmail2
stamps/dbmail2:
	$(MAKE) clean || true
	env CFLAGS="$(CFLAGS)" LDFLAGS="$(LDFLAGS)"  PATH="$(PATH):/usr/lib/postgresql/bin/" \
		./configure $(CONFFLAGS) 
	$(MAKE)
	$(MAKE) install DESTDIR=$(CURDIR)/debian/dbmail2
	touch $@


dbmail2-mysql: stamps/dbmail2-mysql
stamps/dbmail2-mysql:
	$(MAKE) clean || true
	env CFLAGS="$(CFLAGS)" LDFLAGS="$(LDFLAGS)" \
		./configure $(CONFFLAGS) --with-mysql=/usr/include/mysql
	$(MAKE)
	$(MAKE) install DESTDIR=$(CURDIR)/debian/dbmail2-mysql
	touch $@

dbmail2-mysql-ldap: stamps/dbmail2-mysql-ldap
stamps/dbmail2-mysql-ldap:
	$(MAKE) clean || true
	env CFLAGS="$(CFLAGS)" LDFLAGS="$(LDFLAGS)" \
		./configure $(CONFFLAGS) --with-auth-ldap --with-mysql=/usr/include/mysql
	$(MAKE)
	$(MAKE) install DESTDIR=$(CURDIR)/debian/dbmail2-mysql-ldap
	touch $@

dbmail2-pgsql: stamps/dbmail2-pgsql	
stamps/dbmail2-pgsql:
	$(MAKE) clean || true
	env CFLAGS="$(CFLAGS)" LDFLAGS="$(LDFLAGS)" PATH="$(PATH):/usr/lib/postgresql/bin/" \
		./configure $(CONFFLAGS) --with-pgsql=/usr/include/postgresql 
	$(MAKE)
	$(MAKE) install DESTDIR=$(CURDIR)/debian/dbmail2-pgsql
	touch $@
	
dbmail2-pgsql-ldap: stamps/dbmail2-pgsql-ldap
stamps/dbmail2-pgsql-ldap:
	$(MAKE) clean || true
	env CFLAGS="$(CFLAGS)" LDFLAGS="$(LDFLAGS)" PATH="$(PATH):/usr/lib/postgresql/bin/" \
		./configure $(CONFFLAGS) --with-auth-ldap --with-pgsql=/usr/include/postgresql
	$(MAKE)
	$(MAKE) install DESTDIR=$(CURDIR)/debian/dbmail2-pgsql-ldap
	touch $@

dbmail2-sqlite: stamps/dbmail2-sqlite	
stamps/dbmail2-sqlite:
	$(MAKE) clean || true
	env CFLAGS="$(CFLAGS)" LDFLAGS="$(LDFLAGS)" \
		./configure $(CONFFLAGS) --with-sqlite
	$(MAKE)
	$(MAKE) install DESTDIR=$(CURDIR)/debian/dbmail2-sqlite
	touch $@
	
dbmail2-sqlite-ldap: stamps/dbmail2-sqlite-ldap
stamps/dbmail2-sqlite-ldap:
	$(MAKE) clean || true
	env CFLAGS="$(CFLAGS)" LDFLAGS="$(LDFLAGS)" \
		./configure $(CONFFLAGS) --with-auth-ldap --with-sqlite
	$(MAKE)
	$(MAKE) install DESTDIR=$(CURDIR)/debian/dbmail2-sqlite-ldap
	touch $@
	
clean: clean1 unpatch
clean1: 
	# run clean
	dh_testroot
	dh_testdir
	rm -rf stamps
	rm -f `find . -name ".#*"`
	rm -f `find . -name "*.la"`
	rm -f `find . -name "*.lo"`
	rm -f `find . -name "*.o"`
	rm -f `find . -name "*.pyc"`
	# Add here commands to clean up after the build process.
	-$(MAKE) clean
	for d in $(PACKAGES); do \
		for f in postinst prerm postrm preinst docs config templates manpages; do \
			rm -f debian/$$d.$$f; \
		done; \
		for f in init cron.d; do \
			rm -f debian/$$d.dbmail.$$f; \
		done; \
		rm -rf debian/$$d; \
	done	
	for file in INSTALL config.in aclocal.m4 acconfig.h configure `find . -name Makefile.in`; do \
		rm -rf $$file || true; \
	done
	rm -rf autom4te.cache
	for file in Makefile config.h config.status libtool stamp-h .deps .libs; do \
		rm -rf `find . -name $$file`; \
	done
	rm -f stamp-h.in config.log aclocal.m4 configure
	rm -rf buildtools || true
	dh_clean


# Build architecture-dependent files here.
binary-common: build
	dh_testroot
	dh_testdir
#	dh_clean -k

	dh_installdirs -a
	# Add here commands to install the package into debian/dbmail.
	for d in $(PACKAGES); do \
		for f in postinst prerm postrm preinst docs config templates manpages; do \
			sed -e "s,usr/share/doc/dbmail,usr/share/doc/$$d,g" \
			< debian/dbmail.$$f > debian/$$d.$$f; \
		done; \
		for f in init cron.d; do \
			cp debian/dbmail.$$f debian/$$d.dbmail.$$f; \
		done; \
	done
	dh_installinit -a --name=dbmail -- defaults 25
	dh_installcron -a --name=dbmail
	dh_installdebconf -a
	dh_installman -a
	dh_installdocs -a
	dh_installdocs -A  debian/README.Debian debian/TODO
	dh_installchangelogs -a
	dh_installexamples -a
	dh_installdirs -A etc/dbmail var/run/dbmail
	dh_strip -a
	dh_link -a
	dh_compress -a
	dh_fixperms -a
	dh_installdeb -a
	dh_makeshlibs -a
	for p in $(PACKAGES); do \
		dpkg-shlibdeps -Ldebian/$$p/DEBIAN/shlibs \
			-Tdebian/$$p.substvars debian/$$p/usr/sbin/*; \
	done
	dh_gencontrol -a
	dh_md5sums -a 
	dh_builddeb -a
	
binary-indep: build install

binary-arch: build install
	$(MAKE) -f debian/rules DH_OPTIONS=-a binary-common

binary-%: build install
        make -f debian/rules binary-common $* DH_OPTIONS=-p$*
	
binary: binary-indep binary-arch

.PHONY: build clean clean1 patch binary binary-common binary-indep binary-arch unpatch configure install

